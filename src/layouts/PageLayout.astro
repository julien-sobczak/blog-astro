---
import { getCollection } from "astro:content";
import BaseLayout from '../layouts/BaseLayout.astro';
const { category, contentBased, pageTitle } = Astro.props;

// Extract tags
const postsRead = await getCollection('read');
const postsWrite = await getCollection('write');
const postsInspect = await getCollection('inspect');
const allPosts = [...postsRead, ...postsWrite, ...postsInspect];
const tags = new Map<string, number>();
allPosts.forEach((post) => {
  post.data.tags.forEach((tag) => {
    if (!tags.has(tag)) {
      tags.set(tag, 1);
    } else {
      tags.set(tag, tags.get(tag) + 1);
    }
  })
});
const orderedTags = new Map([...tags.entries()].sort((a, b) => b[1] - a[1]));
---

<BaseLayout id={contentBased ? 'page-post' : 'page-category'} pageTitle={pageTitle}>

  <!-- Navigation -->

  <nav id="mainNav" class="navbar-default">

    {contentBased && <div id="reading-bar"></div>}

    <div class="container">
      <a class="navbar-brand" href="/">I'm lovin' I.T.</a>
      <div class="navbar-collabsible">
        <input id="collapsible" class="navbar-checkbox-toggle" type="checkbox">
        <label for="collapsible" class="navbar-label-toggle">Menu <i class="fas fa-bars"></i></label>
        <div class="navbar-collapse">
          <ul>

            <li class={category === 'read' ? "active" : ''}>
              <a href="/categories/read">I'm readin' I.T.</a>
            </li>
            <li class={category === 'write' ? "active" : ''}>
              <a href="/categories/write">I'm writin' I.T.</a>
            </li>
            <li class={category === 'inspect' ? "active" : ''}>
              <a href="/categories/inspect">I'm inspectin' I.T.</a>
            </li>

            <li class="page-scroll">
                <a href="https://fr.linkedin.com/in/julien-sobczak-56780a91">About Me</a>
            </li>
          </ul>
        </div>
      </div>
      <button id="zen-mode-in"><i class="fas fa-minus"></i></button>
      <button id="zen-mode-out"><i class="fas fa-plus"></i></button>
    </div>
  </nav>

  <slot />

  <section id="labels" class="labels">
    <div class="container">

    <div>
      <h2>Tags</h2>
      <hr class="star-light">
    </div>
    <ul class="labels">
      {[...orderedTags.keys()].map(tag => {
        return (
          <li>
            <a href={`/tags/${tag}`}>{tag} <sup class="count">{orderedTags.get(tag)}</sup></a>
          </li>
        );
      })}
    </ul>
  </section>

</BaseLayout>
