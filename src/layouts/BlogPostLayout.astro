---
import { getEntries } from 'astro:content';
import PageLayout from './PageLayout.astro'
const { category, frontmatter } = Astro.props;
const relatedPosts = [];
if (frontmatter.relatedReadPosts) {
  const relatedReadPosts = await getEntries(frontmatter.relatedReadPosts);
  relatedPosts.push(...relatedReadPosts);
}
if (frontmatter.relatedWritePosts) {
  const relatedWritePosts = await getEntries(frontmatter.relatedWritePosts);
  relatedPosts.push(...relatedWritePosts);
}
if (frontmatter.relatedInspectPosts) {
  const relatedInspectPosts = await getEntries(frontmatter.relatedInspectPosts);
  relatedPosts.push(...relatedInspectPosts);
}
---

<PageLayout
  pageTitle={frontmatter.title}
  category={category}
  contentBased={true}>

  <header class=`post-title post-${category }`>
    <div class="container">

      <div class="icon-category">
      </div>

      <div class="metadata">
        <span class="date">{ frontmatter.date.toLocaleDateString('en-us', { year:"numeric", month:"long", day:"numeric"})}</span>

        {frontmatter.tags && frontmatter.tags.map(tag => {
          return <a href={`/tags/${tag}`} class="tag">{tag.toUpperCase()}</a>
        })}

        {frontmatter.topics && frontmatter.topics.map(topic => {
          return <span class="topic">{topic.toUpperCase()}</span>
        })}

        <ul class="language">
          <li class="current-language"><a class="active" href="#">EN</a></li>
        </ul>

        <h2>{frontmatter.title}</h2>
        {frontmatter.subtitle && <h3>{ frontmatter.subtitle }</h3>}

        <p class="author-name">
          <!-- We explicit that the book was not written by the author of the review -->
          {category === 'read' && <span>A review by </span>}
          {category !== 'read' && <span>By </span>}
          <a href="/#about-me">{frontmatter.author}</a>
        </p>

      </div>
      </div>
    </div>
  </header>

  <slot />

  {relatedPosts.length > 0 &&
    <section id="recommendations">
      <div class="container">
        <h2>You may also <strong>&hearts;</strong></h2>
        <hr class="star-light">
        <ul>
          {relatedPosts.map(post => {
            return (
              <li>
                <a class="title" href={'/' + post.collection + '/' + post.slug}>{post.data.title }</a><br/>

                {post.data.tags && post.data.tags.map(tag => {
                  return <a href={`/tags/${tag}`} class="tag">{tag.toUpperCase()}</a>
                })}

                {post.data.topics && post.data.topics.map(topic => {
                  return <span class="topic">{topic.toUpperCase()}</span>
                })}

                {post.data.subtitle && <span class="subtitle">{ post.data.subtitle }</span>}
              </li>
            );
          })}
        </ul>
      </div>
    </section>
  }

</PageLayout>
